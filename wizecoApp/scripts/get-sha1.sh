#!/bin/bash

# Script pour obtenir les empreintes SHA-1 pour Google Sign-In
# Usage: ./scripts/get-sha1.sh

echo "üîç R√©cup√©ration des empreintes SHA-1 pour Google Sign-In"
echo "=================================================="

# V√©rifier si keytool est disponible
if ! command -v keytool &> /dev/null; then
    echo "‚ùå keytool n'est pas trouv√©. Assurez-vous que Java JDK est install√©."
    exit 1
fi

echo ""
echo "üì± 1. Empreinte SHA-1 du keystore de debug (d√©veloppement):"
echo "------------------------------------------------------------"

# Empreinte SHA-1 du keystore de debug
DEBUG_KEYSTORE="$HOME/.android/debug.keystore"
if [ -f "$DEBUG_KEYSTORE" ]; then
    keytool -list -v -keystore "$DEBUG_KEYSTORE" -alias androiddebugkey -storepass android -keypass android | grep "SHA1:"
else
    echo "‚ùå Keystore de debug non trouv√© √†: $DEBUG_KEYSTORE"
    echo "üí° Cr√©ez d'abord un build Android pour g√©n√©rer le keystore de debug"
fi

echo ""
echo "üèóÔ∏è 2. Empreinte SHA-1 d'EAS Build (production):"
echo "------------------------------------------------"

# V√©rifier si EAS CLI est install√©
if command -v eas &> /dev/null; then
    echo "üìã Ex√©cution de: eas credentials"
    echo "üí° Copiez l'empreinte SHA-1 affich√©e dans la section 'Keystore'"
    echo ""
    eas credentials
else
    echo "‚ùå EAS CLI n'est pas install√©."
    echo "üí° Installez-le avec: npm install -g @expo/eas-cli"
    echo "üí° Puis ex√©cutez: eas credentials"
fi

echo ""
echo "üìã 3. Instructions pour Google Cloud Console:"
echo "--------------------------------------------"
echo "1. Allez sur: https://console.cloud.google.com/"
echo "2. S√©lectionnez le projet Wizeco"
echo "3. Allez dans 'APIs & Services' > 'Credentials'"
echo "4. Cr√©ez un 'OAuth 2.0 Client ID' de type Android"
echo "5. Package name: com.evixgroup.wizeco"
echo "6. Ajoutez TOUTES les empreintes SHA-1 obtenues ci-dessus"
echo ""
echo "‚úÖ Une fois configur√©, testez avec: npx expo run:android"
